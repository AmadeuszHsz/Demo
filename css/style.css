@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap');
*{
    margin:0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
    scroll-behavior: smooth;
    -webkit-scroll-behavior:smooth;
    /*powoduje dodanie płynnego przewijania strony po kliknięciu linku z menu. przedostek -webkit dla przeglądarek chrome i safari*/
}
body{
    background: #fff;
    /*max-width: 1180px;
    margin: 0 auto;*/
}
.header{
    background: #ccc;
    height: 100px;
    display: flex;
    /*wyświetla cały dokument jako flex, ale wyświetla się on we wierszu*/
    align-items: center;
    /*align-items wyrównuje element poprzecznie do kierunku, w którym wyświetla się flex (domyślnie wiersz)*/
    position: sticky;/*powoduje przyklejenie elementu*/
    top:0;
    /*i przykleja go do górnej krawędzi okna przeglądarki*/
	/* zamiast tych dwóch parametrów możliwe jest również użycie position:fixed*/
    z-index:99999999;/*umieszcza element na warstwie o podanym numerze. Użycie dużej wartości powoduje, że będzie on zawsze na górze*/
}
.header .logo{
    flex:1;/*parametr ten oznacza, że flex będzie jakiejś szerokości. Wartość 1 ustawia parametr bazowy dla szerokości*/
    height:100%;
    display: flex;
    align-items: center;
    justify-content: center;
}
.header .logo img{
    height:80px;
    width:auto;
}
.header .menu{
    flex:8;/*użycie wartości 8 powoduje, że element ten będzie 8 razy szerszy niż bazowy, ustawiony dla header .logo*/
    height:100%;
    display: flex;
    align-items: center;
    justify-content: center;
}
.header .menu ul{
    display: flex;
    list-style-type: none;
    align-items: center;
    justify-content: space-around;
    width:100%;
    height:100%;
}
.header .menu ul a{
    display: flex;
    align-items: center;
    justify-content: center;
    width:100%;
    height:100%;
    color:#000;
    text-decoration: none;
    transition: 0.7s;
}
.header .menu ul a:hover{
    background:#c00;
    color:#fff;
}
.header .menu ul a li{
    display: flex;
    align-items: center;
    justify-content: center;
    width:100%;
    height:100%;
}
.header .socialki{
    flex:1;/*ten element będzie tak samo szeroki jak header .logo*/
    height:100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 900;
    /*zmienia grubość czcionki zgodnie z parametrami pochodzącymi z czcionki*/
    gap:10px;/*ustawia odstęp pomiędzy kolejnymi elementami flexa*/
}
.header .socialki a,.header .socialki a:visited{
    color:#000;
    font-size:2rem;/*użycie jednostki rem powoduje, że czcionka będzie się odnosiła do czcionki bazowej dla systemu. Jeżeli używana była by skala em, wówczas odniesienie było by do poprzednio użytej wielkości czcionki. czyli jeżeli wcześniej zadeklarowalibyśmy jakiemuś elementowi font-size na 5em, a następnie temu na 3em, to docelowo czcionka by była najpierw powiększona x5, a potem jeszcze x3*/
}
.header .socialki a:hover i.fa-square-facebook{
    color:blue;
}
.header .socialki a:hover i.fa-square-youtube{
    color:red;
}
.baner{
    background: url(../img/bg1.jpg);
    /*podana ścieżka do pliku uwzględnia, że plik css, w którym znajduje się definicja tła znajduje się w innym folderze, niż follder główny. Jeżeli użyjemy linku img/1.jpg wówczas folder img będzie szukany wewnątrz folderu css. Użycie ../ powoduje przejście katalog wyżej*/
    background-repeat: no-repeat;
    /*usuwa powtarzanie tła, ktore domyślnie jest ustawione na powtarzanie poziomo i pionowo*/
    background-position: center;
    /*wyśrodkowuje obrazek tła. pozycja ma dwa parametry - poziomy i pionowy - i pozwala ustawić punkt zaczepienia tła w bloku, w którym obraz tła występuje. Bazowo jest to górny prawy róg. Punktami odniesienia są wszystkie rogi obrazu, połowy boków oraz środek*/
    background-size: cover;
    /*powoduje rozciągniecie obrazu do dłuższego z boków bloku, wewnątrz którego tło się znajduje*/
    display: flex;
    align-items: center;
    justify-content: flex-end;/*przesuwa zawartość bloku do końca flexa*/
    
}
.baner .kratka{
    margin-right:10%;
    width:400px;
    min-height:300px;
    background: rgba(0,0,0,0.5);/*dodatkowy parametr a w kolorze odpowiada za przezroczystość tła. wartości od 0 do 1 odpowiadają 0% do 100%*/
    color:#fff;
    padding: 20px;
    display: flex;
    flex-direction: column;
    /*obraca kierunek flexa z wiersza na kolumnę*/
    justify-content: space-between;
    /*w związku z obróceniem kierunku flexa na pionowy w flex-direction justify-content działa dalej zgodnie z kierunkiem flexa, a on teraz nie jest poziomy, tylko pionowy*/
    align-items: center;
    /*opacity: 0.7;*/
}
.baner .kratka h1{
    font-weight: 200;
}
.baner .kratka p{
    text-align: center;
}
.baner .kratka a{
    color: #fff;
    text-decoration: none;
    text-transform: uppercase;/*zmienia cały tekst na duże litery*/
    border: 1px solid #fff;
    padding: 10px 30px;
    width:100%;
    text-align: center;
    transition: 0.7s;
}
.baner .kratka a:hover{
    background:#fff;
    color:#000;
}
.opis{
    background: #f0f;
    display:flex;
    scroll-margin-top: 100px;
    /*ustawia margines początkowy sekcji uwzględniając wysokość sekcji header, aby zawartość sekcji nie chowała się pod nagłówkiem*/
}
.opis .zdjecie{
    flex:1;
    display: flex;
    align-items: center;
    justify-content: center;
}
.opis .zdjecie img{
    width:300px;
    height:300px;
    /*filter:drop-shadow(10px 10px 18px #000);*/
    background: #ddd;
    border-radius: 50%;
    transition: 0.7s;
}
.opis .zdjecie img:hover{
    border-radius: 50% 5%;
    transform: rotate(35deg) scale(1.2);
}
.opis .opis{
    flex:2;
}
.paralaxa{
    background: url(../img/bg2.jpg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;/*powoduje przyklejenie obrazu tła do okna przeglądarki*/
    background-attachment: fixed;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    scroll-margin-top: 100px;
}
.paralaxa .kratka{
    margin-left:10%;
    width:400px;
    min-height:300px;
    background: rgba(0,0,0,0.5);
    color:#fff;
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    /*opacity: 0.7;*/
}
.paralaxa .kratka h1{
    font-weight: 200;
}
.paralaxa .kratka p{
    text-align: center;
}
.paralaxa .kratka a{
    color: #fff;
    text-decoration: none;
    text-transform: uppercase;
    border: 1px solid #fff;
    padding: 10px 30px;
    width:100%;
    text-align: center;
    transition: 0.7s;
}
.paralaxa .kratka a:hover{
    background:#fff;
    color:#000;
}
.kontakt{
    background: #c99;
    display: flex;
    scroll-margin-top: 100px;
}
.kontakt .mapa{
    flex:1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding:20px;
}
.kontakt .mapa iframe{
    width:100%;
    height:100%;
    background:#fff;
    padding:10px;
}
.kontakt .formularz{
    flex:2;
}
.panele{
    display: flex;
    scroll-margin-top: 100px;
    gap:10px;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}
.panele .tytul{
    text-align: center;
    margin-bottom:50px;
    font-size:1.25rem;
    display: flex;
    align-items: center;
}
.panele .tytul span{
    color:blue;
}
/*subklasy before i after pozwalają na umieszczenie dodatkowych elementów przed i za elementem, do którego są przypisane*/
.panele .tytul:before{
    content:'';/*pozwala na umieszczenie jakiejś zawartości z poziomu css. W tym przypadku - pozostawiony pusty - jest wykorzystany do wyświetlenia jakiegoś elementu graficznego*/
    height:8px;/*o takiej wysokości*/
    width:40px;/*i takiej szerkości*/
    background:blue;/*oraz takim tle. Aby ten element się wyświetlił musimy zmienić elementowi wyżej display na flex albo block*/
    margin-right:10px;
}
.panele .tytul:after{
    content:'';
    height:8px;
    width:40px;
    background:black;
    margin-left:10px;
}
.panele .wiersz{
    display: flex;
    align-items: center;
    justify-content: center;
    gap:10px;
}
.panele .panel{
    flex:1;
    background:#fff;
    height:350px;
    width:280px;
    box-shadow: 0 0 10px rgba(0,0,0,0.5);/*rzucanie cienia przez element. Pierwszy parametr to przesunięcie poziome (wartość dodatnia przesuwa w prawo, ujemna w lewo). Drugi parametr to przesunięcie pionowe (wartość dodatnia przesuwa w dół, ujemna w górę. Zastosowanie w obu parametrach wartości 0 ma odwzorowywać padanie cienia prostopadle do elementu wg osi z. Trzeci z parametrów to odległość, na jaką cień ma padać. I czwarty parametr to kolor cienia z przezroczystością*/
}
.panele .paski{
    background: linear-gradient(45deg, #2da2ff 25%, #444 25%, #444 50%,
    #2da2ff 50%, #2da2ff 75%, #444 75%, #444 100%);
    /*tło jako gradient liniowy. W pierszym parametrze podajemy kąt, pod jakim gradient będzie rozmieszczony w elemencie. W kolejnych krokach podajemy jakie kolory i w których miejscach obszaru będą występowały. Podanie tych samych wartości procentowych dla kolorów granicznych powoduje, że przeglądarka nie tworzy płynnego przejścia pomiędzy tymi kolorami, tylko odcina pierwszy w kolorów, zastępując go drugim*/
    background-size: 40px 40px;/*ustawienie wielkości tła. W związku z domyślną wartością dla powtarzania tła będzie się ono powtarzało poziomo i pionowo, aż do wypełnienia obszaru, w którym się znajduje*/
    display: flex;
    justify-content: center;
    animation: animateBg 0.5s linear infinite;/*dodanie animacji. Pierwszy parametr to nazwa animacji, która musi być unikalna (bowiem animacji możemy mieć nieskończenie wiele). Nazwa nie powinna posiadać polskich znaków ani spacji. Drugi parametr to czas trwania animacji. Kolejny to jej przyrost - linear oznacza, że animacja coraz bardziej przyspiesza od jej początku do jej końca. Ostatni element to nieskończona ilość odtworzeń animacji, czyli jej zapętlenie*/
    animation-play-state: paused;/*Początkowo animacja jest zatrzymana*/
    position:relative;/*powoduje ustalenie tego diva jak nadrzędnego dla wszystkich elementów posiadających position:absolute znajdujących się wewnątrz elementu. W przypadku braku tego relative za bazowy element uznawane jest całe okno przeglądarki*/
    filter: grayscale(1);/*dodaje filtr w postaci wyświetlania wszystkich elementów wewnątrz jako czarno-białe*/
    -webkit-filter: grayscale(1);
}
.panele .paski:nth-child(2){
    background: linear-gradient(135deg, #ff61ae 25%, #444 25%, #444 50%,
    #ff61ae 50%, #ff61ae 75%, #444 75%, #444 100%);
    background-size: 40px 40px;
}
.panele .paski:hover{
    animation-play-state: running;/*po najechaniu na element animacja rozpoczyna się*/
    filter: grayscale(0);/*po najechaniu na element usuwane jest wyświetlanie w trybie czarno-białym*/
}
@keyframes animateBg{/*ustawienie klatek kluczowych dla animacji o nazwie wpisanej po keyframes*/
    0%{/*początek animacji - pierwsza klatka*/
        background-position: 0;
    }
    100%{/*koniec animacji - ostatnia klatka*/
        background-position: 40px;
    }
}/*pomiędzy pierwszą a ostatnią klatką przeglądarka wstawia sobie poszczególne wartości proporcjonalnie*/
.panele .paski img{
    position: absolute;
    bottom:0;
    height:90%;
    transition: height 0.5s;
}
.panele .paski img:hover{
    height:110%;
}
.panele .paski p{
    font-size: 3rem;
    text-transform: uppercase;
    z-index:999;
    position: absolute;
    bottom: 5%;
    background:rgba(0,0,0,0.6);
    width: 100%;
    text-align: center;
    color:#fff;
    transform: scale(0);/*scale 0 powoduje zmniejszenie elementu do 0%, czyli jego zniknięcie*/
    transition: all 0.6s ease-in-out;/*ease-in-out powoduje, że animacja wykonuje się z łagodnym rozpoczęciem, potem przyspiesza i pod koniec zwalnia z łagodnym zakończeniem*/
}
.panele .paski:hover p{
    transform: scale(1);/*po najechaniu element wyświetlany jest w swojej pierwotnej wielkości*/
}
.panele .panel .scan{
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}
.panele .panel .scan .odcisk{
    position: relative;
    width:250px;
    height:250px;
    background: url(../img/fp_1.png);
    background-size: 250px;
}
.panele .panel .scan .odcisk:before{/*nałożenie drugiego obrazu na pierwszy*/
    content: '';
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    background: url(../img/fp_2.png);
    background-size: 250px;
    animation: fprint 4s ease-in-out infinite;
}
@keyframes fprint{/*animacja posiada trzy klatki kluczowe. Jej początek i koniec znajdują się w tym samym punkcie (na górze), a środek animacji to dół bloku. Animacja ta jest działaniem na wysokości drugiego tła zadeklarowanego za pomocą before*/
    0%, 100%{
        height:0%;
    }
    50%{
        height:100%;
    }
}
.panele .panel .scan .odcisk:after{/*Drugą subklasą wstawiana jest linia symulująca działanie skanera*/
    content: '';
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 8px;
    background: #69f;
    filter:drop-shadow(0 0 20px #69f)  drop-shadow(0 0 60px #69f);/*rzucanie cienia wokół elementu. Parametry to przesunięcie w poziomie, pionie, odległość oraz kolor cienia. Podwójne użycie powoduje z różną odległością cienia powoduje, że na pierszych 20px cień ten jest nałożony podwójnie, przez co jest on lepiej widoczny.*/
    animation: fprint_linia 4s ease-in-out infinite;
}
@keyframes fprint_linia{/*W tej animacji użyte jest przesunięcie elementu wypozycjonowanego absolutnie od jego bazowego położenia przy górnej krewędzi elementu w dół, aż do dolnej krawędzi elementu.*/
    0%,100%{
        top:0%;
    }
    50%{
        top:100%;
    }
}
.panele .panel .scan h3{
    color:#69f;
    font-size: 1.25rem;
    margin-top: 20px;
    font-family: consolas;
    text-transform: uppercase;
    filter:drop-shadow(0 0 20px #69f)  drop-shadow(0 0 60px #69f);
    animation: fprint_tekst 0.5s steps(1) infinite;
}
@keyframes fprint_tekst{/*Miganie tekstu osiągnięte za pomocą widoczności elementu - od całkowitej przezroczystości, do całkowitej widoczności*/
    0%,100%{
        opacity: 0;
    }
    50%{
        opacity:1;
    }
}
.panele .obrotowy{
    position: relative;
}
.panele .obrotowy .face{/*wspólna klasa dla obu elementów*/
    position: absolute;
    top:0;
    left:0;
    width:100%;
    height:100%;
    transition: 0.6s;
}
.panele .obrotowy .face.face1{/*klasa dla pierwszego elementu, widocznego na początku*/
    background: #69f;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
    color:#fff;
    transform-origin: bottom;/*wszelkie transformacje następują względem dolnej krawędzi tego elementu*/
}
.panele .obrotowy .face.face1 i{
    font-size: 3rem;
    text-align: center;
    display: block;
}
.panele .obrotowy .face.face1 h3{
    font-size: 2rem;
    font-weight: 300;
    margin-top:15px;
}
.panele .obrotowy:hover .face.face1{
    transform: translateY(-100%) rotateX(90deg);/*transformacja obejmuje przesunięcie w pionie 0 100% do góry oraz obrócenie elemetu o 90 stopni, przez co staje się on niewidoczny*/
    background:#c00;
}
.panele .obrotowy .face.face2{
    padding:20px;
    transform-origin: top;/*wszelkie transformacje następują względem górnej krewędzi elementu*/
    transform: translateY(100%) rotateX(90deg);/*element początkowo jest przesunięty w dół o 100% i obrócony o 90 stopni przez co staje się niewidoczny*/
}
.panele .obrotowy:hover .face.face2{
    transform: translateY(0) rotateX(0deg);/*aby element się wyświetlił ustawić należy mu warości początkowe, więc nie będzie ani przesunięty, ani obrócony*/
}
.stopka{
    background:#222;
    min-height:200px;
    display: flex;
}
.stopka .footer{
    flex:1;
}
.stopka .footer img{
    width:Auto;
    height:80px;
    filter: invert(100%);/*parametr powoduje odwrócenie nasycenia kolorem na przeciwne do bieżącego. W przypadku koloru czarnego kolorem przeciwnym jest biały, wstawienie wartości 50% powoduje uzyskanie koloru szarego. */
}
.test{
    background: #eee;
    width:300px;
    height:100px;
    padding:20px;
}
.full{
    height: calc(100vh - 100px);/*ustawia wysokość dla diva na wysokość ekranu urządzenia pomniejszoną o wysokość nagłówka*/
}